# ECG Denoising Experiment Configuration

# Experiment settings
experiment_name: 'exp_denoising'
sampling_frequency: 500  # Hz
random_seed: 42

# Paths
datafolder: '../../data/ptbxl/'
outputfolder: 'output/'
noise_config_path: '../noise/config/default.yaml'

# Data splits (using strat_fold from PTB-XL)
train_fold: 8
val_fold: 9
test_fold: 10

# Data preprocessing
preprocessing:
  bandpass_lowcut: 1.0   # Hz
  bandpass_highcut: 45.0  # Hz
  bandpass_order: 2
  normalization: 'standard'  # 'standard' or 'minmax'

# Models to train
models:
  #Stage 1 models
  - name: 'fcn'
    type: 'fcn'
    epochs: 50
    lr: 0.001
    batch_size: 32

  - name: 'unet'
    type: 'unet'
    epochs: 50
    lr: 0.001
    batch_size: 32

  - name: 'imunet'
    type: 'imunet'
    epochs: 50
    lr: 0.001
    batch_size: 32

  # Stage 2 models (DRnet using different Stage 1 models)
  # Note: Stage2 models can use Stage1 models from:
  #   1. Current run: Train Stage1 models in same run
  #   2. Previous run: Automatically looks in output/exp_denoising/models/<stage1_name>/best_model.pth
  #   3. Custom path: Specify 'stage1_model_path' parameter to use model from anywhere

  - name: 'drnet_fcn'
    type: 'stage2'
    stage1_model: 'fcn'  # Use FCN's predictions
    stage1_model_path: '/local/home/bamorel/my_ecg_ptbxl_benchmarking/code/denoising/output/exp_denoising/models/fcn/best_model.pth'  # Optional: custom path
    epochs: 50
    lr: 0.001
    batch_size: 32

  - name: 'drnet_unet'
    type: 'stage2'
    stage1_model: 'unet'  # Use UNet's predictions
    stage1_model_path: '/local/home/bamorel/my_ecg_ptbxl_benchmarking/code/denoising/output/exp_denoising/models/unet/best_model.pth'  # Optional: custom path
    epochs: 50
    lr: 0.001
    batch_size: 32

  - name: 'drnet_imunet'
    type: 'stage2'
    stage1_model: 'imunet'  # Use IMUnet's predictions
    stage1_model_path: '/local/home/bamorel/my_ecg_ptbxl_benchmarking/code/denoising/output/exp_denoising/models/imunet/best_model.pth'  # Optional: custom path
    epochs: 50
    lr: 0.001
    batch_size: 32

# Training settings
training:
  optimizer: 'adam'
  loss: 'mse'
  scheduler:
    type: 'ReduceLROnPlateau'
    mode: 'min'
    factor: 0.5
    patience: 5
  early_stopping:
    enabled: true
    patience: 10
    min_delta: 0.0001

# DataLoader settings
dataloader:
  num_workers: 4
  pin_memory: true

# Evaluation settings
evaluation:
  n_bootstrap_samples: 100
  n_jobs: 20
  metrics: ['snr_improvement_db', 'output_snr_db', 'rmse', 'rmse_improvement']

  # Qui plot settings: compare across different noise configurations
  qui_plot:
    enabled: true  # Set to true to generate qui_plot
    noise_configs:
      - name: 'light'
        path: '../noise/config/light.yaml'
      - name: 'default'
        path: '../noise/config/default.yaml'

# Output settings
output:
  save_predictions: true
  save_history: true
  generate_plots: true
  n_example_plots: 3

# Hardware settings
hardware:
  use_cuda: true
  deterministic: true
